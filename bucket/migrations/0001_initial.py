# Generated by Django 3.2.18 on 2023-06-06 14:08

import bucket.storage
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import hashid_field.field
import mptt.fields
import utilities.functions
import utilities.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='File',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('id', hashid_field.field.HashidAutoField(alphabet='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890', min_length=16, prefix='file_', primary_key=True, serialize=False)),
                ('file_name', models.CharField(max_length=500)),
                ('file_type', models.CharField(max_length=5)),
                ('file', models.FileField(max_length=200000, storage=bucket.storage.CustomFileSystemStorage(), upload_to=utilities.functions.upload_files_to)),
            ],
            options={
                'verbose_name': 'File',
                'verbose_name_plural': 'Files',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='LeftOverImage',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('id', hashid_field.field.HashidAutoField(alphabet='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890', min_length=16, prefix='leftover_', primary_key=True, serialize=False)),
                ('file', models.ImageField(upload_to=utilities.functions.upload_leftover_to)),
                ('corners', models.JSONField(verbose_name='Corners')),
                ('treated', models.BooleanField(default=False)),
                ('confirmed', models.BooleanField(default=False)),
                ('x', models.FloatField(verbose_name='Bbox X')),
                ('y', models.FloatField(verbose_name='Bbox Y')),
                ('width', models.FloatField(verbose_name='Bbox width')),
                ('height', models.FloatField(verbose_name='Bbox height')),
                ('thickness', models.FloatField(default=-1, verbose_name='Thickness')),
                ('ratio', models.FloatField(verbose_name='ratio pixels/mm')),
                ('klass', models.CharField(max_length=50)),
                ('batch', models.CharField(default='default', max_length=15)),
                ('location_x', models.PositiveIntegerField(default=0, verbose_name='Shelf X position')),
                ('location_y', models.PositiveIntegerField(default=0, verbose_name='Shelf Y position')),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Folder',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('id', hashid_field.field.HashidAutoField(alphabet='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890', min_length=16, prefix='folder_', primary_key=True, serialize=False)),
                ('name', models.TextField(verbose_name='Name')),
                ('budget', models.CharField(max_length=255)),
                ('path', models.TextField(db_index=True, unique=True, validators=[utilities.validators.validate_filesystem_path])),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='bucket.folder')),
            ],
            options={
                'verbose_name': 'Folder',
                'verbose_name_plural': 'Folders',
                'ordering': ('-created',),
            },
        ),
    ]
